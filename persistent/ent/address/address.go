// Code generated by entc, DO NOT EDIT.

package address

const (
	// Label holds the string label denoting the address type in the database.
	Label = "address"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldAddr holds the string denoting the addr field in the database.
	FieldAddr = "addr"
	// EdgeHost holds the string denoting the host edge name in mutations.
	EdgeHost = "host"
	// Table holds the table name of the address in the database.
	Table = "addresses"
	// HostTable is the table that holds the host relation/edge.
	HostTable = "addresses"
	// HostInverseTable is the table name for the Node entity.
	// It exists in this package in order to avoid circular dependency with the "node" package.
	HostInverseTable = "nodes"
	// HostColumn is the table column denoting the host relation/edge.
	HostColumn = "node_addresses"
)

// Columns holds all SQL columns for address fields.
var Columns = []string{
	FieldID,
	FieldAddr,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "addresses"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"node_addresses",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// AddrValidator is a validator for the "addr" field. It is called by the builders before save.
	AddrValidator func(string) error
)
