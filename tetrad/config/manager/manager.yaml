apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cni-daemon
  namespace: system
  labels:
    control-plane: tetrapod-cni-daemon
    app.kubernetes.io/name: deployment
    app.kubernetes.io/instance: tetrapod-cni-daemon
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: tetrad
    app.kubernetes.io/part-of: tetrad
    app.kubernetes.io/managed-by: kustomize
spec:
  selector:
    matchLabels:
      control-plane: tetrapod-cni-daemon
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: tetrapod-cni-daemon
    spec:
      # TODO(user): Uncomment the following code to configure the nodeAffinity expression
      # according to the platforms which are supported by your solution. 
      # It is considered best practice to support multiple architectures. You can
      # build your manager image using the makefile target docker-buildx.
      # affinity:
      #   nodeAffinity:
      #     requiredDuringSchedulingIgnoredDuringExecution:
      #       nodeSelectorTerms:
      #         - matchExpressions:
      #           - key: kubernetes.io/arch
      #             operator: In
      #             values:
      #               - amd64
      #               - arm64
      #               - ppc64le
      #               - s390x
      #           - key: kubernetes.io/os
      #             operator: In
      #             values:
      #               - linux
      hostNetwork: true
      tolerations:
      - operator: Exists
        effect: NoSchedule
      - operator: Exists
        effect: NoExecute
      containers:
      - args:
        - -zap-log-level=info
        image: controller:latest
        name: manager
        securityContext:
          privileged: true
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8091
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8091
          initialDelaySeconds: 5
          periodSeconds: 10
        env:
        - name: TETRAPOD_CLUSTER_NAME
          value: tetra
        - name: TETRAPOD_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        volumeMounts:
        - name: keys
          mountPath: /etc/tetrapod/keys
        - name: socket
          mountPath: /run/tetrapod
        - name: cni-config
          mountPath: /etc/cni/net.d
        - name: cni-bin
          mountPath: /opt/cni/bin
        # TODO(user): Configure the resources accordingly based on the project requirements.
        # More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
        resources:
          limits:
            cpu: 1000m
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 256Mi
      volumes:
      - name: keys
        emptyDir: {}
      - name: socket
        hostPath:
          path: /run/tetrapod
          type: DirectoryOrCreate
      - name: cni-config
        hostPath:
          path: /etc/cni/net.d
          type: Directory
      - name: cni-bin
        hostPath:
          path: /opt/cni/bin
          type: Directory
      serviceAccountName: cni-daemon
      terminationGracePeriodSeconds: 10
